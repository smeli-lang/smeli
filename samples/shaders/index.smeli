@plugin("@smeli/plugin-ui")
@plugin("@smeli/plugin-plot")

# Shader demo

shader_panel: ui.surface {
  shader: ui.shader {}
  controls: ui.surface {
  }

  direction: "column"
  color: "background"
  elevation: 2
  fade: true
  item0: shader
  item1: ui.surface {
    flex: 0
    item0: controls
  }
}

left_panel: shader_panel {
  speed_slider: ui.slider {
    label: "Speed"
    min: 1
    max: 10
    step: 0.01
    value: 1
  }

  power_slider: ui.slider {
    label: "Power"
    min: 0.2
    max: 1
    step: 0.01
    value: 0.5 + sin(time) * 0.2
  }

  shader: shader {
    code: "@inline("effect1.glsl")"
    uniforms: uniforms {
      power: power_slider.value
      speed: speed_slider.value
    }
  }

  controls: controls {
    item0: speed_slider
    item1: power_slider
  }
}

right_panel: shader_panel {
  quantize_slider: ui.slider {
    label: "Quantize"
    min: 1
    max: 100
    step: 1
    value: 1
  }

  shader: shader {
    code: "@inline("effect2.glsl")"
    uniforms: uniforms {
      quantize: quantize_slider.value
    }
  }

  controls: controls {
    item0: quantize_slider
  }
}

ui: ui {
  theme: default_themes.dark
  page: ui.surface {
    direction: "column"
    color: "primary"
    item0: ui.surface {
      flex: 0
      item0: ui.outline {}
    }
    item1: ui.surface {
      direction: "row"
      responsive: true
      item0: left_panel
      item1: right_panel
    }
  }
}

#>

left_panel: ui.surface {
  color: "background"
  elevation: -2
  item0: ui.stack {
    item0: plot.view {
      viewport: {
        center: vec2(sin(time * 0.3), sin(time * 0.5)) * 0.5
        size: vec2(8, 12)
      }
      item0: plot.grid {}
      item1: plot.circle {
        radius: 4 + sin(time) * 0.4
        color: vec3(0.4, 0.4, 0.4)
      }
      item2: plot.circle {
        radius: 3 + sin(time * 0.4) * 0.7
        color: vec3(0.6, 0.4, 0.8)
      }
      item3: plot.circle {
        radius: 2 + sin(time * 0.7) * 1.4
        color: vec3(0.4, 0.1, 0.2)
      }
    }
    item1: shader_panel {
      color: "none"
      elevation: 0
      shader: shader {
        code: "@inline("effect3.glsl")"
        uniforms: uniforms {
          primary: ui.theme.colors.secondary
        }
      }
    }
  }
}
